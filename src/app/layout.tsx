import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";
import Providers from "@/lib/Providers";
import { headers } from "next/headers";
import GlobalAppStateProvider from "@/context/GlobalAppStateContext";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

const getLoginInfo = async () => {
  const cookie = (await headers()).get("cookie");
  const response = await fetch(
    `${process.env.NEXT_PUBLIC_BASE_URL}/api/v2/get-login-info`,
    {
      method: "GET",
      headers: {
        cookie: cookie ?? "",
      },
      next: { revalidate: 100 },
    }
  );
  const data = await response.json();
  return data;
};

export default async function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  const info = await getLoginInfo();

  return (
    <html lang="en">
      <body className={`${geistSans.variable} ${geistMono.variable}`}>
        <Providers>
          <GlobalAppStateProvider loggedInUser={info?.data}>
            {children}
          </GlobalAppStateProvider>
        </Providers>
      </body>
    </html>
  );
}
